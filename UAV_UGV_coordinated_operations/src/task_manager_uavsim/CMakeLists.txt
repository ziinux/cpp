cmake_minimum_required(VERSION 2.8.3)
project(task_manager_uavsim)

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS roscpp std_msgs task_manager_lib task_manager_msgs tf )

## System dependencies are found with CMake's conventions
find_package(Boost REQUIRED COMPONENTS system)


## Uncomment this if the package has a setup.py. This macro ensures
## modules and global scripts declared therein get installed
## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html
# catkin_python_setup()

#######################################
## Declare ROS messages and services ##
#######################################

## Generate messages in the 'msg' folder
# add_message_files(
#   FILES
#   Message1.msg
#   Message2.msg
# )

## Generate services in the 'srv' folder
# add_service_files(
#   FILES
#   Service1.srv
#   Service2.srv
# )

generate_dynamic_reconfigure_options(
    cfg/TaskGoTo.cfg
    cfg/TaskReachAngle.cfg
    cfg/TaskWaitForROI.cfg
    cfg/TaskSetMotor.cfg
    cfg/TaskRequestTakeOff.cfg
    cfg/TaskTakeOff.cfg
    cfg/TaskRequestLanding.cfg
    cfg/TaskAbortLanding.cfg
    cfg/TaskLandingBack.cfg
    cfg/TaskWaitForLandingBackOrder.cfg
    cfg/TaskWaitForTakeOffOrder.cfg
    cfg/TaskWaitForLowBatteryLevel.cfg
    cfg/TaskWaitForChargedBattery.cfg
    cfg/TaskSpotMarkers.cfg
)


## Generate added messages and services with any dependencies listed here
# generate_messages(
#   DEPENDENCIES
#   std_msgs   task_manager_msgs
# )

###################################
## catkin specific configuration ##
###################################
## The catkin_package macro generates cmake config files for your package
## Declare things to be passed to dependent projects
## INCLUDE_DIRS: uncomment this if you package contains header files
## LIBRARIES: libraries you create in this project that dependent projects also need
## CATKIN_DEPENDS: catkin_packages dependent projects also need
## DEPENDS: system dependencies of this project that dependent projects also need
catkin_package(
#  INCLUDE_DIRS include
#  LIBRARIES task_manager_uav
  CATKIN_DEPENDS roscpp std_msgs task_manager_lib task_manager_msgs tf 
#  DEPENDS system_lib
)

###########
## Build ##
###########

## Specify additional locations of header files
## Your package locations should be listed before other locations
# include_directories(include)
include_directories(
    include ${catkin_INCLUDE_DIRS}
)

## Declare a cpp library
# add_library(task_manager_uav
#   src/${PROJECT_NAME}/task_manager_uav.cpp
# )

## Declare a cpp executable
# add_executable(task_manager_uav_node src/task_manager_uav_node.cpp)

## Add cmake target dependencies of the executable/library
## as an example, message headers may need to be generated before nodes
# add_dependencies(task_manager_uav_node task_manager_uav_generate_messages_cpp)

## Specify libraries to link a library or executable target against
# target_link_libraries(task_manager_uav_node
#   ${catkin_LIBRARIES}
# )

ADD_EXECUTABLE( task_server_uavsim src/task_server.cpp src/UAVEnv.cpp) 
TARGET_LINK_LIBRARIES(task_server_uavsim ${catkin_LIBRARIES} dl )
add_dependencies(task_server_uavsim ${${PROJECT_NAME}_EXPORTED_TARGETS})

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CATKIN_DEVEL_PREFIX}/${CATKIN_PACKAGE_SHARE_DESTINATION}/tasks)

ADD_LIBRARY( UAVSimTaskGoTo SHARED tasks/TaskGoTo.cpp)
TARGET_LINK_LIBRARIES(UAVSimTaskGoTo ${catkin_LIBRARIES} dl)
add_dependencies(UAVSimTaskGoTo ${${PROJECT_NAME}_EXPORTED_TARGETS})

ADD_LIBRARY( UAVSimTaskReachAngle SHARED tasks/TaskReachAngle.cpp)
TARGET_LINK_LIBRARIES(UAVSimTaskReachAngle ${catkin_LIBRARIES} dl)
add_dependencies(UAVSimTaskReachAngle ${${PROJECT_NAME}_EXPORTED_TARGETS})

ADD_LIBRARY( UAVSimTaskWaitForROI SHARED tasks/TaskWaitForROI.cpp)
TARGET_LINK_LIBRARIES(UAVSimTaskWaitForROI ${catkin_LIBRARIES} dl)
add_dependencies(UAVSimTaskWaitForROI ${${PROJECT_NAME}_EXPORTED_TARGETS})

ADD_LIBRARY( UAVSimTaskSetMotor SHARED tasks/TaskSetMotor.cpp)
TARGET_LINK_LIBRARIES(UAVSimTaskSetMotor ${catkin_LIBRARIES} dl)
add_dependencies(UAVSimTaskSetMotor ${${PROJECT_NAME}_EXPORTED_TARGETS})

ADD_LIBRARY( UAVSimTaskRequestTakeOff SHARED tasks/TaskRequestTakeOff.cpp)
TARGET_LINK_LIBRARIES(UAVSimTaskRequestTakeOff ${catkin_LIBRARIES} dl)
add_dependencies(UAVSimTaskRequestTakeOff ${${PROJECT_NAME}_EXPORTED_TARGETS})

ADD_LIBRARY( UAVSimTaskTakeOff SHARED tasks/TaskTakeOff.cpp)
TARGET_LINK_LIBRARIES(UAVSimTaskTakeOff ${catkin_LIBRARIES} dl)
add_dependencies(UAVSimTaskTakeOff ${${PROJECT_NAME}_EXPORTED_TARGETS})

ADD_LIBRARY( UAVSimTaskRequestLanding SHARED tasks/TaskRequestLanding.cpp)
TARGET_LINK_LIBRARIES(UAVSimTaskRequestLanding ${catkin_LIBRARIES} dl)
add_dependencies(UAVSimTaskRequestLanding ${${PROJECT_NAME}_EXPORTED_TARGETS})

ADD_LIBRARY( UAVSimTaskAbortLanding SHARED tasks/TaskAbortLanding.cpp)
TARGET_LINK_LIBRARIES(UAVSimTaskAbortLanding ${catkin_LIBRARIES} dl)
add_dependencies(UAVSimTaskAbortLanding ${${PROJECT_NAME}_EXPORTED_TARGETS})

ADD_LIBRARY( UAVSimTaskLandingBack SHARED tasks/TaskLandingBack.cpp)
TARGET_LINK_LIBRARIES(UAVSimTaskLandingBack ${catkin_LIBRARIES} dl)
add_dependencies(UAVSimTaskLandingBack ${${PROJECT_NAME}_EXPORTED_TARGETS})

ADD_LIBRARY( UAVSimTaskWaitForLandingBackOrder SHARED tasks/TaskWaitForLandingBackOrder.cpp)
TARGET_LINK_LIBRARIES(UAVSimTaskWaitForLandingBackOrder ${catkin_LIBRARIES} dl)
add_dependencies(UAVSimTaskWaitForLandingBackOrder ${${PROJECT_NAME}_EXPORTED_TARGETS})

ADD_LIBRARY( UAVSimTaskWaitForTakeOffOrder SHARED tasks/TaskWaitForTakeOffOrder.cpp)
TARGET_LINK_LIBRARIES(UAVSimTaskWaitForTakeOffOrder ${catkin_LIBRARIES} dl)
add_dependencies(UAVSimTaskWaitForTakeOffOrder ${${PROJECT_NAME}_EXPORTED_TARGETS})

ADD_LIBRARY( UAVSimTaskWaitForLowBatteryLevel SHARED tasks/TaskWaitForLowBatteryLevel.cpp)
TARGET_LINK_LIBRARIES(UAVSimTaskWaitForLowBatteryLevel ${catkin_LIBRARIES} dl)
add_dependencies(UAVSimTaskWaitForLowBatteryLevel ${${PROJECT_NAME}_EXPORTED_TARGETS})

ADD_LIBRARY( UAVSimTaskWaitForChargedBattery SHARED tasks/TaskWaitForChargedBattery.cpp)
TARGET_LINK_LIBRARIES(UAVSimTaskWaitForChargedBattery ${catkin_LIBRARIES} dl)
add_dependencies(UAVSimTaskWaitForChargedBattery ${${PROJECT_NAME}_EXPORTED_TARGETS})

ADD_LIBRARY( UAVSimTaskSpotMarkers SHARED tasks/TaskSpotMarkers.cpp)
TARGET_LINK_LIBRARIES(UAVSimTaskSpotMarkers ${catkin_LIBRARIES} dl)
add_dependencies(UAVSimTaskSpotMarkers ${${PROJECT_NAME}_EXPORTED_TARGETS})

#############
## Install ##
#############

# all install targets should use catkin DESTINATION variables
# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html

## Mark executable scripts (Python etc.) for installation
## in contrast to setup.py, you can choose the destination
# install(PROGRAMS
#   scripts/my_python_script
#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark executables and/or libraries for installation
# install(TARGETS task_manager_uav task_manager_uav_node
#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark cpp header files for installation
# install(DIRECTORY include/${PROJECT_NAME}/
#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
#   FILES_MATCHING PATTERN "*.h"
#   PATTERN ".svn" EXCLUDE
# )

## Mark other files for installation (e.g. launch and bag files, etc.)
# install(FILES
#   # myfile1
#   # myfile2
#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
# )

#############
## Testing ##
#############

## Add gtest based cpp test target and link libraries
# catkin_add_gtest(${PROJECT_NAME}-test test/test_task_manager_uav.cpp)
# if(TARGET ${PROJECT_NAME}-test)
#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})
# endif()

## Add folders to be run by python nosetests
# catkin_add_nosetests(test)
